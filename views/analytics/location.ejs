
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <link rel='stylesheet' href='\css\bootstrap.min.css'/>
    <link rel='stylesheet' href='\css\style.css' />
    <link rel='stylesheet' href='\css\analytics.css' />
</head>
<body>
<div class="input-form">
  <form method="get" action="/generateChart">
    <div id="left">
    <div>
        <label for="project_category" class="control-label">Project Category</label>
        <select class="form-control" name="project_category" id="project_category">
            <option>Select a category</option>
            <option  value="all">All</option>
        </select>
    </div>
    <div>
        <label for="location" class="control-label">Location</label>
        <select class="form-control" name="location" id="location">
            <option>Select a location</option>
        </select>
    </div>
    </div>
    <div id="right">
    <div>
        <label for="chart_param" class="control-label">Chart For</label>
        <select class="form-control" name="chart_param" id="chart_param">
            <option value="">Select an option</option>
            <option value="funds">Location Vs Funds</option>
            <option  value="numPeopleBenefited">Location Vs Num Of Benfitted People</option>
        </select>
    </div>
    <div>
        <label for="chart_type" class="control-label">Chart Type</label>
        <select class="form-control" name="chart_type" id="chart_type">
            <option value="">Select an option</option>
            <option value="pie">Pie Chart</option>
            <option value="bar">Bar Chart</option>
        </select>
    </div>
    </div>
    <button class="form-btn btn  btn-primary" type="Submit" id="submit">Submit</button>

  </form>
   
    <!--button to be showed after chart load-->
    <button class="btn btn-warning list-group" id="metrics" >Change Metrics</button>
</div>

<!--chart will be loaded here-->
<div class="center" id="chart"></div>


<!--buttons to go back to form and change metrics(mobile only)-->
<div class="mobile-btn list-group">
    <div class="mobile-block">
        <button class="btn btn-primary btn-block" id="change-metrics">Change Metrics</button>
     </div>
    <div class="mobile-block">
        <button class="btn btn-warning btn-block" id="back">Go Back</a>
    </div>
</div>





</div>

</body>
<script src="\js\jquery.js"></script>
<script src="\js\bootstrap.min.js"></script>
<script src="\js\highcharts.js"></script>
<script src="\js\highcharts-3d.js"></script>
<script src="\js\Highcharts\js\modules\exporting.js"></script>
<script>
    $(document).ready(function(){

        
        var chart;
        //For populating project category dropdown
        $.ajax({
            url:"../projectCategory",
            type:"GET",
            headers:{"Accept":"application/json;odata=verbose"},
            success:function(data){
                for(var i in data){
                    var item=$('<option>'+data[i].name+'</option>');
                    $('#project_category').append(item);
                }
            },
            error:function(data){
                alert("error");
            }
        });

        //For populating locations dropdown
        $('#project_category').on('change',function(){

            var category= $('option:selected', this).val();

            //resetting  all fields on form upon category change
            $('#location').empty();
            $('#chart_param').val("");
            $('#chart_type').val("");


            $('#location').append($('<option>Select a location</option>'));
            $.ajax({
                url:"../locations",
                type:"GET",
                data:'category='+category,
                headers:{"Accept":"application/json;odata=verbose"},
                success:function(data){
                    for(var i in data){
                        var item=$('<option>'+data[i]+'</option>');
                        $('#location').append(item);
                    }
                },
                error:function(data){
                    alert("error");
                }
            });
        });

        //On submit
        $('#submit').click(function(){
           
             //Hide form after options submit for mobile
             if($(window).width()<588 ){

                $('form').hide();
                $('.mobile-btn').show();

                var type=$('option:selected', '#chart_type').val();
                if(type=="bar")
                    $('#change-metrics').hide();

             }else{

                //Move form fields to top
                $('#left').addClass('left');
                $('#right').addClass('right');
                $(this).removeClass('form-btn');
                $(this).addClass('up-btn');

                //Display change metrics for pie chart alone
                var type=$('option:selected', '#chart_type').val();
                if(type=="pie")
                   $('#metrics').show();
                else
                   $('#metrics').hide();

              }
            
            var formData=new Object();
            formData.Location= $('option:selected', '#location').val();
            formData.Param=$('option:selected', '#chart_param').val();
            formData.ChartType=$('option:selected', '#chart_type').val();


            $.ajax({
                url:"../analytics/getLocationData",
                type:"GET",
                headers:{"Accept":"application/json;odata=verbose"},
                data:{
                    FormData: JSON.stringify(formData)
                },
                success:function(data){
                  //set default metrics and generate chart
                   var formatter="point";
                   generateChart(formData.ChartType,data,formData.Param,formatter);

                   //On click of change metrics,toggle metrics and generate chart        
                   $('#metrics ,#change-metrics').on('click',function(){
                         formatter=(formatter=="point")?"percentage":"point";
                         generateChart(formData.ChartType,data,formData.Param,formatter);
                   });

                },
                error:function(data){
                    alert("error");
                },
                async:false
                 });
              
            return false;  
        });
x

    });

      //Utility for generating charts
      function generateChart(type,data,param,format){

        var formatter={};

        //set point and percentage formatter for pie chart
        formatter["point"]='{series.name}- <b>{point.y}</b>';
        formatter["percentage"]='{series.name}- <b>{point.percentage:.1f}%</b>';


        if(type=="pie"){
            piechart(data,param,formatter[format]);
        }else{
            barchart(data,param,formatter[format]);
        }
    }

    function piechart(data,chartFor,format){
       
       //contruct array for pie chart
       var dataArray=[];
       var name=[];
       var y=[];
       for(var i in data.chartData){
          name[i]=data.chartData[i]._id;
          y[i]=parseFloat(data.chartData[i].y);
          dataArray[i]=new Array(name[i],y[i]);
       }


       //set title and name
       var title;
           name;

       if(chartFor=="funds"){
            title="Projects Vs Funds Allocated";
            name="Funds";
       }else{
            title="Projects Vs NumPeopleBenefited";
            name="numPeopleBenefited";
       }       



       $('#chart').highcharts({
          chart: {
            type: 'pie',
            backgroundColor:null
        },
        credits:{
           text:""
        },
        title: {
           text:title
        },
        tooltip: {
            pointFormat: format.split('-')[1]
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    distance:-30,
                    format:format.split('-')[1]
                },
                showInLegend: true
            }
        },
            series: [{
                name: name,
                colorByPoint: true,
                data: dataArray
            }],
        });
      
    }

     function barchart(data,chartFor,format){

      
       //contruct array for  chart
       var location=[];
       var values=[];
       for(var i in data.chartData){
          location[i]=data.chartData[i]._id;
          values[i]=parseFloat(data.chartData[i].y);
       }


       //set title and name
       var title;
           name;

       if(chartFor=="funds"){
            title="Locations Vs Funds Allocated";
            name="Funds";
       }else{
            title="Locations Vs NumPeopleBenefited";
            name="numPeopleBenefited";
       }     


       //generate column chart
       $('#chart').highcharts({
        chart: {
            type: 'column',
            backgroundColor:null
        },
        title: {
            text: title
        },
        xAxis: {
            categories: location,
            crosshair: true
        },
        credits:{
           text:""
        },
        colors:['#1e3547'],
        yAxis: {
            min: 0,
            title: {
                text: name
            }
        },
        tooltip: {
            pointFormat: format,
            shared: true,
            useHTML: true
        },
        plotOptions: {
            column: {
                pointPadding: 0.2,
                borderWidth: 0
            }
        },
        series: [{
            name:name,
            data:values
        }]
    });

    }
</script>
</html>